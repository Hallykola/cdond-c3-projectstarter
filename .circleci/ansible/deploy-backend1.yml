---
- name: "deployment play." 
  hosts: web
  remote_user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_host_key_checking: false
    ansible_stdout_callback: yaml

  environment:
    NODE_ENV: production
    VERSION: "1"
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR') }}"
    TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES') }}"
    TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS') }}"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
    TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:
        timeout: 600

    - name: "install python for Ansible."
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false
    
    - setup:

  roles:
    - deploy

# export TYPEORM_CONNECTION=postgres
# export TYPEORM_ENTITIES=./src/modules/domain/**/*.entity.ts
# export TYPEORM_HOST=database-2.cvd5xg7o0wc7.us-east-1.rds.amazonaws.com
# export TYPEORM_PORT=5432
# export TYPEORM_USERNAME=postgres
# export TYPEORM_PASSWORD=lovemeloveme
# export TYPEORM_DATABASE=postgres
# export TYPEORM_MIGRATIONS=./src/migrations/*.ts
# export TYPEORM_MIGRATIONS_DIR=./src/migrations